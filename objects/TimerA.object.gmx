<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.seconds = 19;
global.minutes = 3;
global.hours = 0;
Feler = true;
global.OutOfTime = false



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
/*if instance_exists(ground)
and ground.x &lt; GPS2.x-500

{
with ground
{
instance_destroy()
}
}
*/



//global.seconds += 1/room_speed;

//if (global.seconds&lt;60) and (global.seconds&gt;59.9) {
//global.seconds = 0
//global.minutes += 1
//}

//if (global.minutes = 60) {
//global.minutes = 0
//global.hours +=1
//}

// 

if (Feler=true){
global.seconds -= 1/room_speed;
}



if (global.seconds = 0) and (global.minutes != 0){
global.seconds = 59
global.minutes -= 1
}

if (global.seconds &gt; 0.1) and (global.seconds &lt; 1) and (global.minutes = 0){
Feler = false;
global.OutOfTime = true;
}


if (global.minutes = 0) and (global.hours != 0){
global.minutes = 59
global.hours -=1
}
if (global.minutes = 0) and (global.minutes = 0){
global.minutes = 0
}

if (Feler = false){
global.seconds = 0
}

if (global.OutOfTime = true)
{
room_goto(room_gameover)
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
/// draw timer
draw_set_font(font0)
draw_set_colour(c_black);
draw_set_valign(fa_middle);
draw_set_halign(fa_middle);
var drawSec 
drawSec = floor(global.seconds)

//draw_sprite_ext(dialogbox_0,0,view_xview[0]+500,view_yview[0]+100,0.8,0.8,0,c_white,1)

if (global.hours &lt; 10) and (global.minutes &lt; 10) and (drawSec &lt; 10) {
draw_text_outline(view_xview[0]+500,view_yview[0]+100, "0" +string(global.hours) + ":0" + string(global.minutes) + ":0" + string(drawSec),1,c_white,10)
}
else if 
(global.hours &lt; 10) and (global.minutes &lt; 10)  {
draw_text_outline(view_xview[0]+500,view_yview[0]+100, "0" +string(global.hours) + ":0" + string(global.minutes) + ":" + string(drawSec),1,c_white,10)
}
else if 
(global.hours &lt; 10) and (drawSec &lt; 10)  {
draw_text_outline(view_xview[0]+500,view_yview[0]+100, "0" +string(global.hours) + ":" + string(global.minutes) + ":0" + string(drawSec),1,c_white,10)
}
else if 
(global.minutes&lt; 10) and (drawSec &lt; 10)  {
draw_text_outline(view_xview[0]+500,view_yview[0]+100, string(global.hours) + ":" + string(global.minutes) + ":0" + string(drawSec),1,c_white,10)
}
else if 
(global.hours&lt; 10)  {
draw_text_outline(view_xview[0]+500,view_yview[0]+100, "0" + string(global.hours) + ":" + string(global.minutes) + ":" + string(drawSec),1,c_white,10)
}
else if 
(global.minutes&lt; 10)   {
draw_text_outline(view_xview[0]+500,view_yview[0]+100, string(global.hours) + ":0" + string(global.minutes) + ":" + string(drawSec),1,c_white,10)
}
else if 
 (drawSec &lt; 10)  {
draw_text_outline(view_xview[0]+500,view_yview[0]+100, string(global.hours) + ":" + string(global.minutes) + ":0" + string(drawSec),1,c_white,10)
}
else
 {
draw_text_outline(view_xview[0]+500,view_yview[0]+100, string(global.hours) + ":" + string(global.minutes) + ":" + string(drawSec),1,c_white,10)
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
